{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","className","map","motion","div","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c859e82.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCg-slXUOBMmaZE1vvMVXxqCzE4Y0_hyWo\",\r\n  authDomain: \"firegram-297ca.firebaseapp.com\",\r\n  projectId: \"firegram-297ca\",\r\n  storageBucket: \"firegram-297ca.appspot.com\",\r\n  messagingSenderId: \"377063014271\",\r\n  appId: \"1:377063014271:web:6fb52d215b5789098a244a\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({ ...doc.data(), id: doc.id })\r\n                });\r\n                setDocs(documents);\r\n            });\r\n\r\n            return () => unsub();\r\n    }, [collection])\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\nimport '../index.css';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs } = useFirestore('images');\r\n    console.log(docs);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"img-grid\">\r\n                {docs && docs.map(doc => (\r\n                    <motion.div\r\n                        className=\"img-wrap\"\r\n                        key={doc.id}\r\n                        layout\r\n                        whileHover={{ opacity: 1 }}\r\n                        onClick={() => setSelectedImg(doc.url)}\r\n                    >\r\n                        <motion.img src={doc.url} alt=\"ImageW\"\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            transition={{ delay: 1 }}\r\n                        />\r\n                    </motion.div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ selectedImg, setSelectedImg }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n        >\r\n            <motion.img src={selectedImg} alt=\"magnifiedImage\"\r\n                initial={{ y: \"-100vh\" }}\r\n                animate={{ y: 0 }}\r\n            />\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport \"../index.css\";\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div className=\"title\">\r\n            <h1>MyGallery</h1>\r\n            <h2>MY PICTURES</h2>\r\n            <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url:url, createdAt });\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error};\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n\r\n    const { url, progress } = useStorage(file);\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\"\r\n            initial={{ width: 0 }}\r\n            animate={{ width: progress + '%' }}\r\n        ></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import { React, useState } from 'react';\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport '../index.css';\r\n\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg'];\r\n\r\n    const changeHandler = (e) => {\r\n\r\n        let selected = e.target.files[0];\r\n        console.log(e.target.files[0])\r\n\r\n        if (selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError(\"\");\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (png, jepg)');\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler} />\r\n                <span>New Upload +</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}\r\n                {file && <div>{file.name}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n","import React, { useState } from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from \"./comps/Title\";\nimport UploadForm from './comps/UploadForm';\n\nconst App = () => {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}